type User {
  id: ID! @unique @id
  name: String!
  age: Int!
  address: String!
  phone: String!
  city: City! @relation (name: "CityToUser")
  email: String!
  password: String!
  posts: [Post!]! @relation (name: "PostToUser", onDelete: CASCADE)
  comments: [Comment!]! @relation (name: "CommentToUser", onDelete: CASCADE)
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type Post {
  id: ID! @unique @id
  title: String!
  body: String!
  author: User! @relation (name: "PostToUser", onDelete: SET_NULL)
  comments: [Comment!]! @relation (name: "CommentToPost", onDelete: CASCADE)
  published: Boolean!
  city: City! @relation (name: "CityToPost")
  region: String!
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type Comment {
  id: ID! @unique @id
  text: String!
  author: User! @relation (name: "CommentToUser", onDelete: SET_NULL)
  posts: Post! @relation (name: "CommentToPost", onDelete: SET_NULL)
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type City {
  id: ID! @unique @id
  name: String!
  users: [User!]! @relation (name: "CityToUser")
  posts: [Post!]! @relation (name: "CityToPost")
}